set $mod Mod4

font pango:Inconsolata NF 12


# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 10
bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 10

# Mouse
input "2321:21128:PNP0C50:0b_0911:5288_Touchpad" {
    #dwt enabled
    tap enabled
    # middle_emulation enabled
}
# input "type:mouse" {
#     tap enabled
#     # accel_profile flat
#     #dwt enabled
#     #tap enabled
#     # middle_emulation enabled
# }   

input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_options caps:escape
}

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# FZF Launcher
exec_always --no-startup-id $USER_BIN/fzf-launcher-close-when-unfocussed.sh

bindsym $mod+d exec alacritty --class 'launcher' --command bash -c 'compgen -c | sort -u | fzf | xargs -r swaymsg -t command exec;' 
for_window [app_id="^launcher$"] floating enable, border none, resize set width 25 ppt height 90 ppt, move position center

# FZF Profile Launcher
exec_always --no-startup-id $USER_BIN/fzf-launcher-close-when-unfocussed.sh
bindsym $mod+Shift+d exec alacritty --class 'launcher' --command bash -c '$HOME/dotfiles/sway/fzf-sway-profile-launcher.sh'
for_window [app_id="^launcher$"] floating enable, border none, resize set width 50 ppt height 50 ppt, move position center


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+CTRL+h split h

# split in vertical orientation
bindsym $mod+CTRL+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# go to previous open workspace when selecting the current workspace
workspace_auto_back_and_forth yes

# reload the configuration file
bindsym $mod+Shift+c reload

bar { 
  swaybar_command waybar
}

#########
# Modes #
#########

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 pp

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

##########
# CUSTOM #
##########

# dunst
exec --no-startup-id dunst

# dunst keyboard shortcuts
bindsym $mod+x exec dunstctl close-all
bindsym Ctrl+BackSpace exec dunstctl history-pop

# Autostart
# A tmuxp script for watching my dev dir and auto creating a tmuxp yml file
exec_always ~/create_tmuxp_on_dir.sh

focus_follows_mouse no

# default window workspace behavior, to find class and instance `xprop | grep WM_CLASS`
# assign [class="Google-chrome" instance="google-chrome"] $ws2

bindsym XF86MonBrightnessUp exec brightnessctl s 2%+
bindsym XF86MonBrightnessDown exec brightnessctl s 2%-

# shutdown / restart / suspend...

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown

mode "$mode_system" {
	bindsym l exec --no-startup-id swaylock --color 000000, mode "default"
	bindsym e exec --no-startup-id swaymsg exit, mode "default"
	bindsym s exec --no-startup-id swaylock --color 000000 && systemctl suspend, mode "default"
	bindsym h exec --no-startup-id swaylock --color 000000 && systemctl hibernate, mode "default"
	bindsym r exec --no-startup-id systemctl reboot, mode "default"
	bindsym CTRL+s exec --no-startup-id systemctl poweroff -i, mode "default"
	bindsym Return mode "default"
	bindsym Escape mode "default"
}

bindsym Mod4+BackSpace mode "$mode_system"

for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

for_window [class="Arandr"] floating enable

# Clipboard Screenshots
bindsym Print exec $USER_BIN/screenshot.sh &
bindsym Shift+Print exec $USER_BIN/screenshot-highlighted-window.sh &

bindsym $mod+b exec $BROWSER &
bindsym $mod+Shift+b exec $BROWSER_SECONDARY &


# Color picker
bindsym CTRL+Print exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy 


# Colors
set $foreground #C0CAF5
set $background #000000
set $cursorColor #C0CAF5

# black
set $black1 #414868
set $black2 #3B4261
set $trueblack #000000

# red
set $red1 #F7768E
set $red2 #DB4B4B

# green
set $green1 #9ECE6A
set $green2 #73DACA

# yellow
set $yellow1 #E0AF68
set $yellow2 #E0AF68

# blue
set $blue1 #7AA2F7
set $blue2 #2AC3DE

# magenta
set $cyan1 #BB9AF7
set $cyan2 #BB9AF7

# cyan
set $cyan1 #7DCFFF
set $cyan2 #7DCFFF

# white
set $white1 #2E2E2E
set $white2 #FFFFFF

# Design adjustments for Tokyo Night theme feel
# hide borders
hide_edge_borders both


# Display
output * bg #000000 solid_color

# Run monitor setup script at startup
exec_always --no-startup-id $USER_BIN/setup_monitors.sh

# Optional: Bind a key to manually run the monitor setup script
# Replace Mod4 with your mod key (e.g., the Windows key)
bindsym $mod+a exec $USER_BIN/setup_monitors.sh

# class border backgr. text indicator child_border
client.focused #414868 $white2 $trueblack #7AA2F7
client.focused_inactive #3B4261 $background $foreground #565F89
client.unfocused #333333 #222222 #888888 #292d2e #222222
client.urgent $red1 $red1 $white2 $red1 $red1
client.placeholder #000000 #0c0c0c $white2 #000000 #0c0c0c


include /etc/sway/config.d/*

# Autostart
exec 1password

# scratchpad
#for_window [class="Alacritty" instance="scratchpad_terminal"] move to scratchpad, border none
#bindsym $mod+Shift+t [instance="scratchpad_terminal"] scratchpad show
##exec alacritty --class Alacritty,scratchpad_terminal
#exec "$DOTFILES/zsh/scratchpad.sh"
#
#for_window [class="Alacritty" instance="scratchpad_htop"] move to scratchpad, border none
#bindsym $mod+Shift+p [instance="scratchpad_htop"] scratchpad show
#exec alacritty --class Alacritty,scratchpad_htop -e htop

